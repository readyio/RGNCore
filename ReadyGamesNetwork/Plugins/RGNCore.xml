<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RGNCore</name>
    </assembly>
    <members>
        <member name="T:RGN.AuthState">
            <summary>
            Represents current user authentication state within the RGN SDK.
            </summary>
        </member>
        <member name="P:RGN.AuthState.LoginState">
            <summary>
            Representing the current login state within the RGN SDK.
            </summary>
        </member>
        <member name="P:RGN.AuthState.AuthProvider">
            <summary>
            Represents the Auth provider that is used to authenticate the user.
            </summary>
        </member>
        <member name="P:RGN.AuthState.LoginResult">
            <summary>
            Represents potential login results within the RGN SDK.
            </summary>
        </member>
        <member name="M:RGN.AuthState.ToString">
            <summary>
            Represents the AuthState as a string
            </summary>
            <returns>AuthState as a string</returns>
        </member>
        <member name="T:RGN.BaseModule`1">
            <summary>
            Represents a base module for other RGN modules to inherit from.
            </summary>
            <typeparam name="TModule">The type of the derived module.</typeparam>
        </member>
        <member name="P:RGN.BaseModule`1.I">
            <summary>
            Gets the singleton instance of the derived module.
            </summary>
        </member>
        <member name="F:RGN.BaseModule`1._rgnCore">
            <summary>
            The RGN core reference to use in the module code
            </summary>
        </member>
        <member name="M:RGN.BaseModule`1.SetRGNCore(RGN.IRGNRolesCore)">
            <summary>
            Sets the Ready Games Network (RGN) core reference.
            </summary>
            <param name="rgnCore">The RGN core to be set.</param>
        </member>
        <member name="M:RGN.BaseModule`1.Init">
            <summary>
            Initializes the module
            </summary>
        </member>
        <member name="M:RGN.BaseModule`1.Dispose(System.Boolean)">
            <summary>
            Sets the static instance of the module to default value
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:RGN.BaseModule`1.Dispose">
            <summary>
            Implements the disposing pattern
            </summary>
        </member>
        <member name="T:RGN.EnumAuthProvider">
            <summary>
            Represents the Auth provider that is used to authenticate the user.
            </summary>
        </member>
        <member name="F:RGN.EnumAuthProvider.None">
            <summary>
            User is not logged in, or the auth provider is not yet initialized
            </summary>
        </member>
        <member name="F:RGN.EnumAuthProvider.Firebase">
            <summary>
            Firebase auth provider
            </summary>
        </member>
        <member name="F:RGN.EnumAuthProvider.Facebook">
            <summary>
            Facebook auth provider
            </summary>
        </member>
        <member name="F:RGN.EnumAuthProvider.Google">
            <summary>
            Google auth provider
            </summary>
        </member>
        <member name="F:RGN.EnumAuthProvider.Apple">
            <summary>
            Apple auth provider
            </summary>
        </member>
        <member name="F:RGN.EnumAuthProvider.Email">
            <summary>
            Email auth provider
            </summary>
        </member>
        <member name="F:RGN.EnumAuthProvider.Guest">
            <summary>
            Guest auth provider
            </summary>
        </member>
        <member name="T:RGN.EnumLoginResult">
            <summary>
            An enumeration representing potential login results within the RGN SDK.
            </summary>
        </member>
        <member name="F:RGN.EnumLoginResult.None">
            <summary>
            Default login result, when the SDK is initialized
            </summary>
        </member>
        <member name="F:RGN.EnumLoginResult.Ok">
            <summary>
            Login successful, no errors encountered.
            </summary>
        </member>
        <member name="F:RGN.EnumLoginResult.AccountAlreadyLinked">
            <summary>
            Login unsuccessful due to a previous link with an account.
            </summary>
        </member>
        <member name="F:RGN.EnumLoginResult.AccountExistsWithDifferentCredentials">
            <summary>
            Login unsuccessful because an account exists with different credentials.
            </summary>
        </member>
        <member name="F:RGN.EnumLoginResult.AccountNeedsRecentLogin">
            <summary>
            Login unsuccessful due to the need for a more recent login.
            </summary>
        </member>
        <member name="F:RGN.EnumLoginResult.Unknown">
            <summary>
            Login unsuccessful due to an unknown error.
            </summary>
        </member>
        <member name="F:RGN.EnumLoginResult.Cancelled">
            <summary>
            Login cancelled by the user.
            </summary>
        </member>
        <member name="T:RGN.EnumLoginState">
            <summary>
            An enumeration representing the current login state within the RGN SDK.
            </summary>
        </member>
        <member name="F:RGN.EnumLoginState.Processing">
            <summary>
            User is logging in, awating for backend response
            </summary>
        </member>
        <member name="F:RGN.EnumLoginState.NotLoggedIn">
            <summary>
            User is not logged in.
            </summary>
        </member>
        <member name="F:RGN.EnumLoginState.Success">
            <summary>
            User successfully logged in.
            </summary>
        </member>
        <member name="F:RGN.EnumLoginState.Error">
            <summary>
            An error occurred during the login process.
            </summary>
        </member>
        <member name="T:RGN.EnumRGNEnvironment">
            <summary>
            An enumeration representing the different environments in which the RGN SDK can operate.
            </summary>
        </member>
        <member name="F:RGN.EnumRGNEnvironment.Staging">
            <summary>
            The staging environment, a pre-production environment used for testing.
            </summary>
        </member>
        <member name="F:RGN.EnumRGNEnvironment.Production">
            <summary>
            The production environment, where the live version of the application runs.
            </summary>
        </member>
        <member name="F:RGN.EnumRGNEnvironment.Development">
            <summary>
            The development environment, used by RGN SDK developers for programming and debugging.
            </summary>
        </member>
        <member name="T:RGN.Extensions.CollectionExtensions">
            <summary>
            A static class housing extension methods for collections.
            </summary>
        </member>
        <member name="M:RGN.Extensions.CollectionExtensions.RemoveNullValues``2(System.Collections.Generic.Dictionary{``0,``1})">
            <summary>
            Removes all entries with null values from a source dictionary.
            </summary>
            <typeparam name="T1">The type of keys in the dictionary.</typeparam>
            <typeparam name="T2">The type of values in the dictionary.</typeparam>
            <param name="source">The source dictionary from which to remove null values.</param>
            <returns>A dictionary of the same type as the source, with all entries having null values removed.</returns>
        </member>
        <member name="T:RGN.Extensions.StringExtensions">
            <summary>
            A static class housing extension methods for strings.
            </summary>
        </member>
        <member name="M:RGN.Extensions.StringExtensions.FirstCharToUpper(System.String)">
            <summary>
            Capitalizes the first character of a string
            </summary>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="T:RGN.Extensions.TasksExtensions">
            <summary>
            A static class housing extension methods for Task objects.
            </summary>
        </member>
        <member name="M:RGN.Extensions.TasksExtensions.AsIEnumeratorReturnNull``1(System.Threading.Tasks.Task{``0})">
            <summary>
            Converts a Task object to an IEnumerator, returning null.
            </summary>
            <typeparam name="T">The type of the Task's result.</typeparam>
            <param name="task">The task to be converted.</param>
            <returns>An IEnumerator representing the task.</returns>
        </member>
        <member name="M:RGN.Extensions.TasksExtensions.AsIEnumeratorReturnNull(System.Threading.Tasks.Task)">
            <summary>
            Converts a Task object to an IEnumerator, returning null.
            </summary>
            <param name="task">The task to be converted.</param>
            <returns>An IEnumerator representing the task.</returns>
        </member>
        <member name="M:RGN.Extensions.TasksExtensions.AsIEnumeratorReturnNullDontThrow``1(System.Threading.Tasks.Task{``0})">
            <summary>
            Converts a Task object to an IEnumerator, returning null and not throwing exceptions.
            </summary>
            <typeparam name="T">The type of the Task's result.</typeparam>
            <param name="task">The task to be converted.</param>
            <returns>An IEnumerator representing the task.</returns>
        </member>
        <member name="M:RGN.Extensions.TasksExtensions.AsIEnumeratorReturnNullDontThrow(System.Threading.Tasks.Task)">
            <summary>
            Converts a Task object to an IEnumerator, returning null and not throwing exceptions.
            </summary>
            <param name="task">The task to be converted.</param>
            <returns>An IEnumerator representing the task.</returns>
        </member>
        <member name="T:RGN.FunctionsClient.ApiException">
            <summary>
            Represents an exception thrown by the SDK
            </summary>
        </member>
        <member name="P:RGN.FunctionsClient.ApiException.ErrorCode">
            <summary>
            Gets or sets the error code (HTTP status code)
            </summary>
            <value>The error code (HTTP status code).</value>
        </member>
        <member name="P:RGN.FunctionsClient.ApiException.ErrorContent">
            <summary>
            Gets or sets the error content (body json object)
            </summary>
            <value>The error content (Http response body).</value>
        </member>
        <member name="M:RGN.FunctionsClient.ApiException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RGN.FunctionsClient.ApiException"/> class.
            </summary>
        </member>
        <member name="M:RGN.FunctionsClient.ApiException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RGN.FunctionsClient.ApiException"/> class.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="M:RGN.FunctionsClient.ApiException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RGN.FunctionsClient.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
        </member>
        <member name="M:RGN.FunctionsClient.ApiException.#ctor(System.Int32,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:RGN.FunctionsClient.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
            <param name="errorContent">Error content.</param>
        </member>
        <member name="T:RGN.IApplicationStore">
            <summary>
            Defines the required contract for ApplicationStore, providing necessary application information and configurations.
            </summary>
        </member>
        <member name="P:RGN.IApplicationStore.GetRGNMasterAppID">
            <summary>
            Gets the RGN Master Application ID.
            </summary>
        </member>
        <member name="P:RGN.IApplicationStore.GetRGNProjectId">
            <summary>
            Gets the RGN Project ID.
            </summary>
        </member>
        <member name="P:RGN.IApplicationStore.GetRGNApiKey">
            <summary>
            Gets the RGN Api Key
            </summary>
        </member>
        <member name="P:RGN.IApplicationStore.GetiOSAppId">
            <summary>
            Gets the iOS Application ID.
            </summary>
        </member>
        <member name="P:RGN.IApplicationStore.GetAppLinkPrefix">
            <summary>
            Gets the Application Link Prefix.
            </summary>
        </member>
        <member name="P:RGN.IApplicationStore.GetRGNEnvironment">
            <summary>
            Gets the RGN Environment.
            </summary>
        </member>
        <member name="P:RGN.IApplicationStore.IsUsingEmulator">
            <summary>
            Indicates if using an emulator.
            </summary>
        </member>
        <member name="P:RGN.IApplicationStore.GetEmulatorServerIp">
            <summary>
            Gets the Emulator Server IP.
            </summary>
        </member>
        <member name="P:RGN.IApplicationStore.GetFunctionsPort">
            <summary>
            Gets the Functions Port.
            </summary>
        </member>
        <member name="P:RGN.IApplicationStore.GetGoogleSignInWebClientIdAndroid">
            <summary>
            Gets the Google Sign-In Web Client ID for Android.
            </summary>
        </member>
        <member name="P:RGN.IApplicationStore.GetGoogleSignInReverseClientIdAndroid">
            <summary>
            Gets the Google Sign-In Reverse Client ID for Android.
            </summary>
        </member>
        <member name="P:RGN.IApplicationStore.GetGoogleSignInWebClientIdiOS">
            <summary>
            Gets the Google Sign-In Web Client ID for iOS.
            </summary>
        </member>
        <member name="P:RGN.IApplicationStore.GetGoogleSignInReverseClientIdiOS">
            <summary>
            Gets the Google Sign-In Reverse Client ID for iOS.
            </summary>
        </member>
        <member name="P:RGN.IApplicationStore.GetFirebaseAssociatedDomain">
            <summary>
            Gets the Firebase Associated Domain.
            </summary>
        </member>
        <member name="P:RGN.IApplicationStore.GetRGNMasterApiKey">
            <summary>
            Gets the RGN Master API Key.
            </summary>
        </member>
        <member name="P:RGN.IApplicationStore.GetRGNMasterAndroidAppID">
            <summary>
            Gets the RGN Master Android App ID.
            </summary>
        </member>
        <member name="P:RGN.IApplicationStore.GetRGNMasterIOSAppID">
            <summary>
            Gets the RGN Master iOS App ID.
            </summary>
        </member>
        <member name="P:RGN.IApplicationStore.GetRGNMasterProjectId">
            <summary>
            Gets the RGN Master Project ID.
            </summary>
        </member>
        <member name="P:RGN.IApplicationStore.GetRGNStorageURL">
            <summary>
            Gets the RGN Storage URL.
            </summary>
        </member>
        <member name="P:RGN.IApplicationStore.GetRGNFriendInviteMessage">
            <summary>
            Gets the RGN Friend Invite Message.
            </summary>
        </member>
        <member name="P:RGN.IApplicationStore.GetRGNMasterMessageSenderId">
            <summary>
            Gets the RGN Master Message Sender ID.
            </summary>
        </member>
        <member name="P:RGN.IApplicationStore.GetRGNMasterStorageBucket">
            <summary>
            Gets the RGN Master Storage Bucket.
            </summary>
        </member>
        <member name="P:RGN.IApplicationStore.GetRGNMasterDatabaseUrl">
            <summary>
            Gets the RGN Master Database URL.
            </summary>
        </member>
        <member name="T:RGN.IRGNCore">
            <summary>
            Ready Games Network core class. Is resposible for user auth and modules initialization
            </summary>
        </member>
        <member name="E:RGN.IRGNCore.AuthenticationChanged">
            <summary>
            Is called every time the user auth state is changed
            For example user logs out, logs in as a guest, logs is with email
            </summary>
        </member>
        <member name="E:RGN.IRGNCore.UpdateEvent">
            <summary>
            Unity Update event. You can subscribe on this event to receive updates every frame.
            </summary>
        </member>
        <member name="P:RGN.IRGNCore.CurrentAuthState">
            <summary>
            Returns the current Authentication state for the User
            </summary>
        </member>
        <member name="P:RGN.IRGNCore.Dependencies">
            <summary>
            The RGN SDK dependencies contract
            </summary>
        </member>
        <member name="P:RGN.IRGNCore.AuthorizedProviders">
            <summary>
            Mask of all providers, linked to user acc
            </summary>
        </member>
        <member name="P:RGN.IRGNCore.AppIDForRequests">
            <summary>
            RGNAppId, set on RGNCoreBuilder.Build() and can override by OverrideApplicationIdentifier()
            </summary>
        </member>
        <member name="P:RGN.IRGNCore.MasterAppUser">
            <summary>
            User from ReadyMaster firebase backend
            </summary>
        </member>
        <member name="P:RGN.IRGNCore.IsLoggedIn">
            <summary>
            Indicates, that user is currently logged in with one of linked providers
            </summary>
        </member>
        <member name="T:RGN.IRGNModule">
            <summary>
            Defines the required contract for RGN Modules, providing necessary methods for initialization and disposal.
            </summary>
        </member>
        <member name="M:RGN.IRGNModule.SetRGNCore(RGN.IRGNRolesCore)">
            <summary>
            Sets the RGN Core for the module.
            </summary>
            <param name="rgnCore">The RGN Core to set.</param>
        </member>
        <member name="M:RGN.IRGNModule.Init">
            <summary>
            Initializes the module.
            </summary>
        </member>
        <member name="F:RGN.Model.OpenSea.OpenSeaAttribute.trait_type">
            <summary>
            Name of the trait
            </summary>
        </member>
        <member name="F:RGN.Model.OpenSea.OpenSeaAttribute.value">
            <summary>
            Value of the trait
            </summary>
        </member>
        <member name="F:RGN.Model.OpenSea.OpenSeaAttribute.display_type">
            <summary>
            Indicating how you would like it to be displayed
            </summary>
        </member>
        <member name="T:RGN.Model.OpenSea.OpenSeaMetadata">
            <summary>
            Please review the official OpenSea documentation:
            https://docs.opensea.io/docs/metadata-standards
            </summary>
        </member>
        <member name="F:RGN.Model.OpenSea.OpenSeaMetadata.name">
            <summary>
            Name of the item.
            </summary>
        </member>
        <member name="F:RGN.Model.OpenSea.OpenSeaMetadata.description">
            <summary>
            A human readable description of the item. Markdown is supported.
            </summary>
        </member>
        <member name="F:RGN.Model.OpenSea.OpenSeaMetadata.external_url">
            <summary>
            This is the URL that will appear below the asset's image
            on OpenSea and will allow users to leave OpenSea and view
            the item on your site.
            </summary>
        </member>
        <member name="F:RGN.Model.OpenSea.OpenSeaMetadata.background_color">
            <summary>
            Background color of the item on OpenSea.
            Must be a six-character hexadecimal without a pre-pended #.
            </summary>
        </member>
        <member name="F:RGN.Model.OpenSea.OpenSeaMetadata.animation_url">
            <summary>
            URL to a multi-media attachment for the item. The file extensions
            GLTF, GLB, WEBM, MP4, M4V, OGV, and OGG are supported, along with
            the audio-only extensions MP3, WAV, and OGA.
            Animation_url also supports HTML pages, allowing you to build rich
            experiences and interactive NFTs using JavaScript canvas, WebGL, and more.
            Scripts and relative paths within the HTML page are now supported.
            However, access to browser extensions is not supported.
            </summary>
        </member>
        <member name="F:RGN.Model.OpenSea.OpenSeaMetadata.youtube_url">
            <summary>
            A URL to a YouTube video.
            </summary>
        </member>
        <member name="F:RGN.Model.OpenSea.OpenSeaMetadata.image">
            <summary>
            This is the URL to the image of the item. Can be just about any type
            of image (including SVGs, which will be cached into PNGs by OpenSea),
            and can be IPFS URLs or paths. We recommend using a 350 x 350 image.
            </summary>
        </member>
        <member name="F:RGN.Model.OpenSea.OpenSeaMetadata.image_data">
            <summary>
            Raw SVG image data, if you want to generate images on the fly (not recommended).
            Only use this if you're not including the image parameter.
            </summary>
        </member>
        <member name="F:RGN.Model.OpenSea.OpenSeaMetadata.attributes">
            <summary>
            These are the attributes for the item, which will show up on the OpenSea page for the item.
            </summary>
        </member>
        <member name="T:RGN.ModuleDependencies.IRGNAnalytics">
            <summary>
            This interface is used to inject the module dependency and make it optional
            If the developers do not use the RGN Analytics package, the value in Dependencies will be null
            </summary>
        </member>
        <member name="M:RGN.ModuleDependencies.IRGNAnalytics.LogEventAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously logs an analytic event with provided event name into RGN analytics backend
            Later you can request 
            </summary>
            <param name="eventName">The analytics event name</param>
            <param name="eventParameters">Optional event parameters to store with the event</param>
            <param name="cancellationToken">Optional parameter to enable cancellation of the task.
            Default value is an unset CancellationToken.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when eventName is null or empty.</exception>
            <exception cref="T:System.OperationCanceledException">Thrown when the operation is cancelled via the cancellationToken.</exception>
        </member>
        <member name="T:RGN.ModuleDependencies.IRGNMessaging">
            <summary>
            This interface is used to inject the module dependency and make it optional
            If the developers do not use the RGN Messaging package, the value in Dependencies will be null
            </summary>
        </member>
        <member name="T:RGN.RGNCoreBuilder">
            <summary>
            Responsible for creating RGNCore instance and initializing it
            </summary>
        </member>
        <member name="P:RGN.RGNCoreBuilder.Initialized">
            <summary>
            Gets a value indicating whether the RGNCoreBuilder has been initialized.
            </summary>
        </member>
        <member name="P:RGN.RGNCoreBuilder.I">
            <summary>
            Gets the RGNCore instance.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when core has not been built yet.</exception>
        </member>
        <member name="M:RGN.RGNCoreBuilder.AddModule(RGN.IRGNModule)">
            <summary>
            Adds a new IRGNModule to the internal modules list.
            </summary>
            <param name="module">The module to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when RGNCore instance is not null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when module already exists in the list.</exception>
        </member>
        <member name="M:RGN.RGNCoreBuilder.CreateAndBuildAsync(RGN.IDependencies,RGN.RGNCore.AuthenticationChangedDelegate)">
            <summary>
            Creates and builds an asynchronous instance of the RGNCore.
            </summary>
            <param name="dependencies">Instance of the RGN SDK dependencies implementation.</param>
            <param name="authenticationChanged">Callback to receive user authentication events.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when RGNCore instance is not null.</exception>
            <returns>Asynchronous operation that returns an IRGNCore instance.</returns>
        </member>
        <member name="M:RGN.RGNCoreBuilder.CreateInstance(RGN.IDependencies)">
            <summary>
            Creates an instance of the IRGNCore.
            </summary>
            <param name="dependencies">ImplDependencies needed to create the instance.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when RGNCore instance is not null.</exception>
            <returns>Instance of IRGNCore created.</returns>
        </member>
        <member name="M:RGN.RGNCoreBuilder.BuildAsync">
            <summary>
            Asynchronously builds the RGNCore.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when RGNCore instance is null.</exception>
            <returns>Task representing the operation.</returns>
        </member>
        <member name="M:RGN.RGNCoreBuilder.Dispose">
            <summary>
            Disposes of the resources used by the RGNCoreBuilder.
            </summary>
        </member>
        <member name="T:RGN.Utility.BaseMigrationRequestData">
            <summary>
            This class supports multiple versions of an API by appending a "version" parameter to the request data.
            </summary>
        </member>
        <member name="P:RGN.Utility.BaseMigrationRequestData.Default">
            <summary>
            Singleton instance of BaseMigrationRequestData to minimize object allocations.
            </summary>
        </member>
        <member name="F:RGN.Utility.BaseMigrationRequestData.version">
            <summary>
            Represents the current version of the API implementation on the server.
            </summary>
        </member>
        <member name="M:RGN.Utility.BaseMigrationRequestData.#ctor">
            <summary>
            A protected constructor to restrict the direct instantiation of this class and
            ensure it's only used within an inheritance hierarchy.
            </summary>
        </member>
        <member name="T:RGN.Utility.DateTimeUtility">
            <summary>
            Provides utility functions for handling DateTime values in Unity. This class contains methods that convert Unix timestamp to DateTime and
            DateTime to ISO format strings. It's designed to work with the Ready Games Network (RGN) Unity SDK.
            </summary>
        </member>
        <member name="M:RGN.Utility.DateTimeUtility.UnixTimeStampToDateTime(System.Double)">
            <summary>
            Converts a Unix timestamp (milliseconds) to a DateTime object.
            </summary>
            <param name="unixTimeStamp">The Unix timestamp in milliseconds to convert, represented as a double.</param>
            <returns>A DateTime object that represents the specified Unix timestamp converted to local time.</returns>
        </member>
        <member name="M:RGN.Utility.DateTimeUtility.DateTimeToUnixTimeStamp(System.DateTime)">
            <summary>
            Converts a DateTime object to Unix Timestamp in milliseconds
            </summary>
            <param name="dateTime">The date time to convert</param>
            <returns>Milliseconds since Unix epoch (midnight of 1970 year)</returns>
        </member>
        <member name="M:RGN.Utility.DateTimeUtility.DateTimeToISOString(System.DateTime)">
            <summary>
            Converts a DateTime object to an ISO format string, including milliseconds.
            </summary>
            <param name="dateTime">The DateTime object to convert.</param>
            <returns>A string representation of the specified DateTime in ISO format with millisecond precision.</returns>
        </member>
        <member name="M:RGN.Utility.DateTimeUtility.DateTimeToISOLikeStringNoMilliseconds(System.DateTime)">
            <summary>
            Converts a DateTime object to an ISO-like format string, excluding milliseconds.
            </summary>
            <param name="dateTime">The DateTime object to convert.</param>
            <returns>A string representation of the specified DateTime in ISO-like format without millisecond precision.</returns>
        </member>
        <member name="M:RGN.Utility.DateTimeUtility.UnixTimeStampToISO(System.Double)">
            <summary>
            Converts a Unix timestamp to an ISO format string.
            </summary>
            <param name="unixTimeStamp">The Unix timestamp to convert, represented as a double.</param>
            <returns>A string representation of the specified Unix timestamp in ISO format with millisecond precision.</returns>
        </member>
        <member name="M:RGN.Utility.DateTimeUtility.UnixTimeStampToISOLikeStringNoMilliseconds(System.Double)">
            <summary>
            Converts a Unix timestamp to an ISO-like format string, excluding milliseconds.
            </summary>
            <param name="unixTimeStamp">The Unix timestamp to convert, represented as a double.</param>
            <returns>A string representation of the specified Unix timestamp in ISO-like format without millisecond precision.</returns>
        </member>
        <member name="M:RGN.Utility.DateTimeUtility.UnixTimeStampToDateTimeOffset(System.Double)">
            <summary>
            Converts a Unix timestamp to a DateTimeOffset object.
            </summary>
            <param name="unixTimeStamp">The Unix timestamp to convert, represented as a double.</param>
            <returns>A DateTimeOffset object that represents the specified Unix timestamp.</returns>
        </member>
        <member name="M:RGN.Utility.DateTimeUtility.DateTimeOffsetToUnixTimeStamp(System.DateTimeOffset)">
            <summary>
            Converts a DateTimeOffset object to a Unix timestamp.
            </summary>
            <param name="dateTimeOffset">The DateTimeOffset object to convert.</param>
            <returns>A Unix timestamp representation of the specified DateTimeOffset.</returns>
        </member>
        <member name="M:RGN.Utility.DateTimeUtility.DateTimeOffsetToISOString(System.DateTimeOffset)">
            <summary>
            Converts a DateTimeOffset object to an ISO format string.
            </summary>
            <param name="dateTimeOffset">The DateTimeOffset object to convert.</param>
            <returns>A string representation of the specified DateTimeOffset in ISO format.</returns>
        </member>
        <member name="M:RGN.Utility.DateTimeUtility.ISOStringToDateTimeOffset(System.String)">
            <summary>
            Converts an ISO format string to a DateTimeOffset object.
            </summary>
            <param name="isoString">The ISO string to convert.</param>
            <returns>A DateTimeOffset object that represents the specified ISO string.</returns>
        </member>
        <member name="T:RGN.Utility.Obfuscator">
            <summary>
            This class will generate obfuscated data and generate a key to deofscate the data later.
            </summary>
        </member>
        <member name="T:RGN.Utility.Obfuscator.InvalidOrderArray">
            <summary>
            An Exception thrown when the order array provided is invalid or shorter than the number of data slices made.
            </summary>
        </member>
        <member name="M:RGN.Utility.Obfuscator.Obfuscate(System.Byte[],System.Int32[],System.Int32@)">
            <summary>
            Generates the obfucscation data.
            </summary>
            <param name="data"> Public data to be obfuscated. </param>
            <param name="order"> The array, passed by reference, of order of the data slices used to obfuscate the data with. </param>
            <param name="rkey"> Outputs the encryption key to deobfuscate the data at runtime </param>
            <returns>The obfucated public key</returns>
        </member>
        <member name="M:RGN.Utility.Obfuscator.DeObfuscate(System.Byte[],System.Int32[],System.Int32)">
            <summary>
            Deofuscates the obfuscated data
            </summary>
            <param name="data"> Public data to be obfuscated. </param>
            <param name="order"> The array, passed by reference, of order of the data slices used to obfuscate the data with. </param>
            <param name="key"> Outputs the encryption key to deobfuscate the data at runtime </param>
            <returns>The obfucated public key</returns>
        </member>
    </members>
</doc>
